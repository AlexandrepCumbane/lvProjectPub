{"version":3,"sources":["assets/img/pages/graphic-1.png","views/information/KnowledgeCards.js","views/information/KnowledgeBaseMain.js","views/information/Information.js"],"names":["module","exports","KnowledgeCards","translate","context","state","data","requestMore","next","props","requestForm","url","name","then","app_reducer","list","setState","renderExpiration","item","today","Date","current","published_date","userRole","published","className","verifyLabel","toLocaleLowerCase","includes","value","renderCards","map","length","title","category_label","aproved_by_label","created_by_label","file","Col","md","onClick","fillSidebar","sm","key","id","Card","CardBody","src","img1","alt","width","toUpperCase","this","loadMore","updateLoadMore","Row","React","Component","contextType","IntlContext","connect","config","auth","login","app","requestDropodowns","KnowledgeBaseMain","edit","onChange","event","searchText","target","toLowerCase","handleSidebar","prev","show","Fragment","ArticleView","classnames","FormGroup","Input","type","placeholder","bsSize","size","Information","pageTitle","pageParent","activePage","items","columnDefs","page","hasNew","val","breadCrumbItems","link","path","breadCrumbTitle","breadCrumbParent","breadCrumbActive"],"mappings":"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","file":"static/js/7.b40da263.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graphic-1.58c221eb.png\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, CardBody, Row, Col } from \"reactstrap\";\nimport img1 from \"../../assets/img/pages/graphic-1.png\";\n\nimport {\n  requestDropodowns,\n  requestForm,\n} from \"../../redux/actions/app/actions\";\n\nimport { IntlContext } from \"../../i18n/provider\";\nclass KnowledgeCards extends React.Component {\n  static contextType = IntlContext;\n  translate = this.context.translate;\n  state = {\n    data: [],\n  };\n  componentDidMount() {\n    this.requestMore(false);\n  }\n\n  requestMore = (next = true) => {\n    return this.props\n      .requestForm({\n        url: \"articles\",\n        name: \"article\",\n        next,\n      })\n      .then(() => {\n        const data = this.props.app_reducer[\"article\"].list;\n        this.setState({ data });\n      });\n  };\n\n  componentDidUpdate() {\n    if (this.props.loadMore) {\n      this.requestMore();\n      this.props.updateLoadMore();\n    }\n  }\n\n  renderExpiration = (item) => {\n    const today = new Date();\n    const current = new Date(item.published_date);\n\n    if (\n      this.props.userRole === \"manager\" &&\n      (today <= current || item.published_date === null)\n    ) {\n      return item.published ? (\n        <small className=\"text-success\">\n          <strong>{this.translate(\"Published\")}</strong>\n        </small>\n      ) : (\n        <small className=\"text-warning\">\n          <strong> {this.translate(\"Not Published\")}</strong>\n        </small>\n      );\n    } else {\n      if (this.props.userRole === \"manager\") {\n        return (\n          <small className=\"text-danger\">\n            <strong>{this.translate(\"Expired\")}</strong>\n          </small>\n        );\n      }\n    }\n\n    return (\n      <small className=\"text-success\">\n        <strong>{this.translate(\"Published\")}</strong>\n      </small>\n    );\n  };\n\n  verifyLabel = (item) => { \n    return this.translate(item ?? \"None\")\n      .toLocaleLowerCase()\n      .includes(this.props.value.toLocaleLowerCase());\n  };\n\n  renderCards = () => {\n    const { data } = this.state;\n\n    let result = data.map((item) => {\n      if (this.props.value.length < 1) {\n        return (\n          <Col\n            md=\"4\"\n            onClick={() => this.props.fillSidebar(item, true)}\n            sm=\"6\"\n            className=\"search-content rounded-0\"\n            key={item.id}\n          >\n            <Card className=\"rounded-0\">\n              <CardBody className=\"text-center\">\n                <div>\n                  <img\n                    src={img1}\n                    alt={item.title}\n                    className=\"mx-auto mb-2\"\n                    width=\"180\"\n                  />\n                  <h4>{item.title.toUpperCase()}</h4>\n                  <small className=\"text-dark\">\n                    {this.translate(item.category_label)}\n                  </small>\n                  <br />\n                  {this.renderExpiration(item)}\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        );\n      } else if (\n        this.verifyLabel(item.title) ||\n        this.verifyLabel(item.category_label) ||\n        this.verifyLabel(item.aproved_by_label) ||\n        this.verifyLabel(item.created_by_label) ||\n        this.verifyLabel(item.file)\n      ) {\n        return (\n          <Col\n            md=\"4\"\n            onClick={() => this.props.fillSidebar(item, true)}\n            sm=\"6\"\n            className=\"search-content rounded-0\"\n            key={item.id}\n          >\n            <Card className=\"rounded-0\">\n              <CardBody className=\"text-center\">\n                <div>\n                  <img\n                    src={img1}\n                    alt={item.title}\n                    className=\"mx-auto mb-2\"\n                    width=\"180\"\n                  />\n                  <h4>{item.title.toUpperCase()}</h4>\n                  <small className=\"text-dark\">\n                    {this.translate(item.category_label)}\n                  </small>\n                  <br />\n                  {this.renderExpiration(item)}\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        );\n      }\n      return \"\";\n    });\n    return result;\n  };\n  render() {\n    return <Row>{this.renderCards()}</Row>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state,\n    config: state.auth.login.config,\n    app_reducer: state.app.app_reducer,\n    userRole: state.auth.login.userRole,\n  };\n}\n\nexport default connect(mapStateToProps, { requestForm, requestDropodowns })(\n  KnowledgeCards\n);\n","import React from \"react\";\nimport { Card, CardBody, FormGroup, Input, Row, Col } from \"reactstrap\";\nimport { Search } from \"react-feather\";\nimport KnowledgeCards from \"./KnowledgeCards\";\nimport classnames from \"classnames\";\n\n// import { ContextLayout } from \"../../utility/context/Layout\";\nimport ArticleView from \"./ArticleView\";\nimport \"../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../assets/scss/pages/users.scss\";\nimport \"../../assets/scss/pages/data-list.scss\";\nimport { IntlContext } from \"../../i18n/provider\";\n\nclass KnowledgeBaseMain extends React.Component {\n  static contextType = IntlContext;\n  translate = this.context.translate;\n\n  state = {\n    value: \"\",\n    edit: false,\n    data: {},\n    loadMore: false,\n  };\n\n  onChange = (event) => {\n    let searchText = event.target.value.toLowerCase();\n    this.setState({\n      value: searchText,\n    });\n  };\n\n  updateLoadMore = () => {\n    this.setState({ loadMore: !this.state.loadMore });\n  };\n\n  handleSidebar = (value, prev) => {\n    this.setState({ edit: value });\n  };\n\n  fillSidebar = (data, show) => {\n    this.setState({ data, edit: true });\n  };\n\n  render() {\n    const { edit, data } = this.state;\n    return (\n      <React.Fragment>\n        <div className={`data-list thumb-view\"`}>\n          {this.state.edit ? (\n            <ArticleView\n              handleSidebar={this.handleSidebar}\n              show={edit}\n              data={data}\n              updateLoadMore={this.updateLoadMore}\n            />\n          ) : (\n            <div />\n          )}\n          <div\n            className={classnames(\"data-list-overlay\", {\n              show: this.state.edit,\n            })}\n          ></div>\n        </div>\n        <Row className=\"overflow-hidden agGrid-card rounded-0\">\n          <Col sm=\"12\">\n            <Card className=\"knowledge-base-bg rounded-0\">\n              <CardBody>\n                <h1 className=\"white\">\n                  {this.translate(\"Dedicated Source Used on Website\")}\n                </h1>\n                <p className=\"mb-2 white\">\n                  {this.translate(\n                    \"You can find any content by searching for the keyword\"\n                  )}\n                </p>\n                <form>\n                  <FormGroup className=\"position-relative has-icon-left mb-0\">\n                    <Input\n                      className=\"rounded-0\"\n                      type=\"text\"\n                      placeholder={this.translate(\n                        \"Search a topic or a keyword\"\n                      )}\n                      bsSize=\"lg\"\n                      value={this.state.value}\n                      onChange={this.onChange}\n                    />\n                    <div className=\"form-control-position\">\n                      <Search size={14} />\n                    </div>\n                  </FormGroup>\n                </form>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col sm=\"12\">\n            <KnowledgeCards\n              value={this.state.value}\n              fillSidebar={this.fillSidebar}\n              loadMore={this.state.loadMore}\n              updateLoadMore={this.updateLoadMore}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\nexport default KnowledgeBaseMain;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport KnowledgeBadeMain from \"./KnowledgeBaseMain\";\nimport \"../../assets/scss/pages/knowledge-base.scss\";\nimport { IntlContext } from \"../../i18n/provider\";\nclass Information extends Component {\n  static contextType = IntlContext;\n  translate = this.context.translate;\n\n  state = {\n    pageTitle: \"Knowledge Base\",\n    pageParent: \"Categories & Articles\",\n    activePage: \"Categories\",\n    items: [],\n    columnDefs: [],\n    show: false,\n    data: [],\n    page: \"lvform\",\n  };\n\n  componentDidMount() {}\n\n  hasNew = () => {\n    let val = false;\n\n    const { userRole } = this.props;\n    switch (userRole) {\n      case \"manager\":\n        val = true;\n        break;\n      case \"operator\":\n        val = false;\n        break;\n      case \"focalpoint\":\n        val = false;\n        break;\n      case \"partner\":\n        val = false;\n        break;\n\n      default:\n        val = false;\n        break;\n    }\n\n    return val;\n  };\n\n  render() {\n    return (\n      <div>\n        <Breadcrumbs\n          breadCrumbItems={\n            this.hasNew()\n              ? [\n                  {\n                    name: this.translate(\"Add New\"),\n                    link: `${this.props.path}s/new`,\n                  },\n                ]\n              : []\n          }\n          breadCrumbTitle={this.translate(this.state.pageTitle)}\n          breadCrumbParent={this.translate(this.state.pageParent)}\n          breadCrumbActive={this.translate(this.state.activePage)}\n        />\n\n        <Row>\n          <Col sm=\"12\">\n            <KnowledgeBadeMain />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state,\n    config: state.auth.login.config,\n    app_reducer: state.app.app_reducer,\n    userRole: state.auth.login.userRole,\n  };\n}\n\nexport default connect(mapStateToProps, {})(Information);\n"],"sourceRoot":""}