{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/custom/statisticCards/Card.js","views/dashboard/roles/query/TotalCases.js","views/dashboard/roles/query/DailyCases.js","views/dashboard/roles/query/WeeklyCases.js","views/dashboard/roles/query/MonthlyCases.js","views/dashboard/roles/query/AnnualCases.js","views/dashboard/roles/query/TotalReferall.js","views/dashboard/roles/query/TotalReferallFeedback.js","views/dashboard/roles/query/TotalNotReferall.js","views/dashboard/roles/query/FeedbackFocalpointManager.js","views/dashboard/roles/query/NoFeedbackFocalpointManager.js","views/dashboard/roles/query/TotalFocalpointManager.js","views/dashboard/roles/query/FeedbackFocalpointPartner.js","views/dashboard/roles/query/TotalFocalpointPartner.js","views/dashboard/roles/query/NoFeedbackFocalpointPartner.js","views/dashboard/roles/query/FeedbackPartner.js","views/dashboard/roles/query/TotalPartner.js","views/dashboard/roles/query/ApprovedPartner.js","views/dashboard/roles/query/NotApprovedPartner.js","views/pages/Home.js"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","SimpleAnalipticCard","Card","className","CardBody","this","props","iconRight","hideChart","iconBg","icon","stat","statTitle","React","Component","CASES_BY_AGE","gql","AllCases","useQuery","pollInterval","loading","error","data","context","useContext","IntlContext","size","translate","type","dcount","totalLvformRecords","DailyCases","id","userInfo","dailyCases","WeeklyCases","color","weeklyCases","MonthlyCases","monthlyCases","AnnualCases","annualCases","ReferallCases","totalLvformReferallRecords","FeedbackCases","totalLvformWithFeedbackRecords","NotReferallCases","totalLvformNotReferallRecords","FeedbackFocalPointManager","withFeedbackFpManager","NoFeedbackFocalPointManager","withoutFeedbackFpManager","TotalFocalPointManager","totalReceivedFpManager","FeedbackFocalPointPartner","withFeedbackFpPartner","TotalFocalPointPartner","totalReceivedFpPartner","NoFeedbackFocalPointPartner","withoutFeedbackFpPartner","NoFeedbackPartner","withoutFeedbackPartner","TotalPartner","totalReceivedPartner","ApprovedPartner","approvedPartner","NotApprovedPartner","notAprovedPartner","Home","state","pageTitle","pageParent","activePage","items","columnDefs","show","page","currentUserRole","locale","LOCALES","PORTUGUESE","renderSwitchCard","userRole","element","renderOperatorCards","renderFocalPointCards","renderPartnerCards","renderManagerCards","Row","Col","lg","md","breadCrumbItems","breadCrumbTitle","breadCrumbParent","breadCrumbActive","contextType","connect","config","auth","login","app_reducer","app","userOauth","profile","sub"],"mappings":"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","file":"static/js/9.c1500c4e.chunk.js","sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\n\nclass SimpleAnalipticCard extends React.Component {\n  render() {\n    return (\n      <Card className=\"square\">\n        <CardBody\n          className={`${\n            this.props.className ? this.props.className : \"stats-card-body\"\n          } d-flex ${\n            !this.props.iconRight && !this.props.hideChart\n              ? \"flex-column align-items-start\"\n              : this.props.iconRight\n              ? \"justify-content-between flex-row-reverse align-items-center\"\n              : this.props.hideChart && !this.props.iconRight\n              ? \"justify-content-center flex-column text-center\"\n              : null\n          } ${!this.props.hideChart ? \"pb-0\" : \"pb-2\"} pt-2`}\n        >\n          <div className=\"icon-section\">\n            <div\n              className={`avatar avatar-stats p-50 m-0 ${\n                this.props.iconBg\n                  ? `bg-rgba-${this.props.iconBg}`\n                  : \"bg-rgba-primary\"\n              }`}\n            >\n              <div className=\"avatar-content\">{this.props.icon}</div>\n            </div>\n          </div>\n          <div className=\"title-section\">\n            <h2 className=\"text-bold-600 mt-1 mb-25\">{this.props.stat}</h2>\n            <p className=\"mb-2\">{this.props.statTitle}</p>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default SimpleAnalipticCard;\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { Phone } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst CASES_BY_AGE = gql`\n  {\n    totalLvformRecords {\n      dcount\n    }\n  }\n`;\n\nexport function AllCases() {\n  const { loading, error, data } = useQuery(CASES_BY_AGE, {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        icon={<Phone className=\"text-primary\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Total Cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalLvformRecords;\n\n  return (\n    <SimpleAnalipticCard\n      icon={<Phone className=\"text-primary\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Total Cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { Sun } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n    dailyCases(id: \"${id}\"){\n      dcount,\n      name\n    }\n  }\n`;\n\nexport function DailyCases(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 1500,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"warning\"\n        icon={<Sun className=\"text-warning\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Daily Cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.dailyCases;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"warning\"\n      icon={<Sun className=\"text-warning\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Daily Cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { Cloud } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  weeklyCases(id: \"${id}\"){\n      dcount,\n      name\n    }\n  }\n`;\n\nexport function WeeklyCases(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 1300,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        icon={<Cloud className=\"text-warning\" color=\"warning\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Weekly Cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.weeklyCases;\n\n  return (\n    <SimpleAnalipticCard\n      icon={<Cloud className=\"text-primary\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Weekly Cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { Calendar } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  monthlyCases(id: \"${id}\"){\n      dcount,\n      name\n    }\n  }\n`;\n\nexport function MonthlyCases(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 1500,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"secondary\"\n        icon={<Calendar className=\"text-secondary\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Monthly Cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.monthlyCases;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"info\"\n      icon={<Calendar className=\"text-info\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Monthly Cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { Globe } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  annualCases(id: \"${id}\"){\n      dcount,\n      name\n    }\n  }\n`;\n\nexport function AnnualCases(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 1200,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"success\"\n        icon={<Globe className=\"text-success\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Annual Cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.annualCases;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"success\"\n      icon={<Globe className=\"text-success\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Annual Cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { PhoneForwarded } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst CASES_BY_AGE = gql`\n  {\n    totalLvformReferallRecords {\n      dcount\n    }\n  }\n`;\n\nexport function ReferallCases() {\n  const { loading, error, data } = useQuery(CASES_BY_AGE, {\n    pollInterval: 5000,\n  });\n\n  const context = useContext(IntlContext);\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        icon={<PhoneForwarded className=\"text-success\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Referred cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalLvformReferallRecords;\n\n  return (\n    <SimpleAnalipticCard\n      icon={<PhoneForwarded className=\"text-success\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Referred cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { PhoneCall } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst CASES_BY_AGE = gql`\n  {\n    totalLvformWithFeedbackRecords {\n      dcount\n    }\n  }\n`;\n\nexport function FeedbackCases() {\n  const { loading, error, data } = useQuery(CASES_BY_AGE, {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        icon={<PhoneCall className=\"text-success\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Cases with Feedback\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalLvformWithFeedbackRecords;\n\n  return (\n    <SimpleAnalipticCard\n      icon={<PhoneCall className=\"text-success\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Cases with Feedback\")}\n      type=\"area\"\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport { PhoneMissed } from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\nimport { useContext } from \"react\";\n\nconst CASES_BY_AGE = gql`\n  {\n    totalLvformNotReferallRecords {\n      dcount\n    }\n  }\n`;\n\nexport function NotReferallCases() {\n  const { loading, error, data } = useQuery(CASES_BY_AGE, {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        icon={<PhoneMissed className=\"text-danger\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Not referred cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalLvformNotReferallRecords;\n\n  return (\n    <SimpleAnalipticCard\n      icon={<PhoneMissed className=\"text-danger\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Not referred cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n    withFeedbackFpManager(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function FeedbackFocalPointManager(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"success\"\n        icon={<Icon.ThumbsUp className=\"text-success\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"With Feedback - Manager\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.withFeedbackFpManager;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"success\"\n      icon={<Icon.ThumbsUp className=\"text-success\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"With Feedback - Manager\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n    withoutFeedbackFpManager(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function NoFeedbackFocalPointManager(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"danger\"\n        icon={<Icon.ThumbsDown className=\"text-danger\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Without Feedback - Manager\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.withoutFeedbackFpManager;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"danger\"\n      icon={<Icon.ThumbsDown className=\"text-danger\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Without Feedback - Manager\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  totalReceivedFpManager(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function TotalFocalPointManager(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"info\"\n        icon={<Icon.Archive className=\"text-info\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"All Cases - Manager\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalReceivedFpManager;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"info\"\n      icon={<Icon.Archive className=\"text-info\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"All Cases - Manager\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n    withFeedbackFpPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function FeedbackFocalPointPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"success\"\n        icon={<Icon.ThumbsUp className=\"text-success\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"With Feedback - Partner\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.withFeedbackFpPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"success\"\n      icon={<Icon.ThumbsUp className=\"text-success\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"With Feedback - Partner\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  totalReceivedFpPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function TotalFocalPointPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"info\"\n        icon={<Icon.Archive className=\"text-info\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"All Cases - Partner\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalReceivedFpPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"info\"\n      icon={<Icon.Archive className=\"text-info\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"All Cases - Partner\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n    withoutFeedbackFpPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function NoFeedbackFocalPointPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"danger\"\n        icon={<Icon.ThumbsDown className=\"text-danger\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Without Feedback - Partner\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.withoutFeedbackFpPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"danger\"\n      icon={<Icon.ThumbsDown className=\"text-danger\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Without Feedback - Partner\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n    withoutFeedbackPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function NoFeedbackPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"danger\"\n        icon={<Icon.ThumbsDown className=\"text-danger\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Without Feedback\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.withoutFeedbackPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"danger\"\n      icon={<Icon.ThumbsDown className=\"text-danger\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Without Feedback\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  totalReceivedPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function TotalPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"info\"\n        icon={<Icon.Archive className=\"text-info\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"All Cases\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.totalReceivedPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"info\"\n      icon={<Icon.Archive className=\"text-info\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"All Cases\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  approvedPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function ApprovedPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"success\"\n        icon={<Icon.Check className=\"text-success\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Approved Feedback\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.approvedPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"success\"\n      icon={<Icon.Check className=\"text-success\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Approved Feedback\")}\n      type=\"area\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport SimpleAnalipticCard from \"../../../../components/custom/statisticCards/Card\";\nimport * as Icon from \"react-feather\";\nimport { IntlContext } from \"../../../../i18n\";\n\nconst QUERY = (id) => gql`\n{\n  notAprovedPartner(id: \"${id}\"){\n      dcount,\n    }\n  }\n`;\n\nexport function NotApprovedPartner(props) {\n  const { loading, error, data } = useQuery(QUERY(props.userInfo ?? \"\"), {\n    pollInterval: 5000,\n  });\n  const context = useContext(IntlContext);\n\n  if (loading) return <p>Loading...</p>;\n  if (error)\n    return (\n      <SimpleAnalipticCard\n        iconBg=\"danger\"\n        icon={<Icon.X className=\"text-danger\" size={15} />}\n        stat=\"0\"\n        statTitle={context.translate(\"Unapproved Feedback\")}\n        type=\"area\"\n      />\n    );\n\n  const { dcount } = data.notAprovedPartner;\n\n  return (\n    <SimpleAnalipticCard\n      iconBg=\"danger\"\n      icon={<Icon.X className=\"text-danger\" size={15} />}\n      stat={dcount}\n      statTitle={context.translate(\"Unapproved Feedback\")}\n      type=\"area\"\n    />\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { LOCALES } from \"../../i18n/index\";\nimport { IntlContext } from \"../../i18n/provider\";\nimport { AllCases } from \"../dashboard/roles/query/TotalCases\";\nimport { DailyCases } from \"../dashboard/roles/query/DailyCases\";\nimport { WeeklyCases } from \"../dashboard/roles/query/WeeklyCases\";\nimport { MonthlyCases } from \"../dashboard/roles/query/MonthlyCases\";\nimport { AnnualCases } from \"../dashboard/roles/query/AnnualCases\";\nimport { ReferallCases } from \"../dashboard/roles/query/TotalReferall\";\nimport { FeedbackCases } from \"../dashboard/roles/query/TotalReferallFeedback\";\nimport { NotReferallCases } from \"../dashboard/roles/query/TotalNotReferall\";\nimport { FeedbackFocalPointManager } from \"../dashboard/roles/query/FeedbackFocalpointManager\";\nimport { NoFeedbackFocalPointManager } from \"../dashboard/roles/query/NoFeedbackFocalpointManager\";\nimport { TotalFocalPointManager } from \"../dashboard/roles/query/TotalFocalpointManager\";\nimport { FeedbackFocalPointPartner } from \"../dashboard/roles/query/FeedbackFocalpointPartner\";\nimport { TotalFocalPointPartner } from \"../dashboard/roles/query/TotalFocalpointPartner\";\nimport { NoFeedbackFocalPointPartner } from \"../dashboard/roles/query/NoFeedbackFocalpointPartner\";\nimport { NoFeedbackPartner } from \"../dashboard/roles/query/FeedbackPartner\";\nimport { TotalPartner } from \"../dashboard/roles/query/TotalPartner\";\nimport { ApprovedPartner } from \"../dashboard/roles/query/ApprovedPartner\";\nimport { NotApprovedPartner } from \"../dashboard/roles/query/NotApprovedPartner\";\nclass Home extends React.Component {\n  static contextType = IntlContext;\n  translate = this.context.translate;\n\n  state = {\n    pageTitle: this.translate(\"Home\"),\n    pageParent: this.translate(\"Dashboard & Analytics\"),\n    activePage: this.translate(\"Dashboard\"),\n    items: [],\n    columnDefs: [],\n    show: false,\n    data: [],\n    page: \"lvform\",\n    currentUserRole: \"admin\",\n    locale: LOCALES.PORTUGUESE,\n  };\n\n  render() {\n    return (\n      <div>\n        <Breadcrumbs\n          breadCrumbItems={[]}\n          breadCrumbTitle={this.state.pageTitle}\n          breadCrumbParent={this.state.pageParent}\n          breadCrumbActive={this.state.activePage}\n        />\n\n        {this.renderSwitchCard()}\n        {/* {ExchangeRates()} */}\n        {/* <ExchangeRates /> */}\n      </div>\n    );\n  }\n\n  renderSwitchCard = () => {\n    const { userRole } = this.props;\n\n    let element = <></>;\n\n    switch (userRole) {\n      case \"operator\":\n        element = this.renderOperatorCards();\n        break;\n\n      case \"focalpoint\":\n        element = this.renderFocalPointCards();\n        break;\n\n      case \"partner\":\n        element = this.renderPartnerCards();\n        break;\n\n      case \"manager\":\n        element = this.renderManagerCards();\n        break;\n\n      default:\n        element = <p>{this.translate(\"User role not provided\")}</p>;\n        break;\n    }\n\n    return element;\n  };\n\n  renderOperatorCards = () => {\n    return (\n      <Row>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <DailyCases userInfo={this.props.userInfo} />\n        </Col>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <WeeklyCases userInfo={this.props.userInfo} />\n        </Col>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <MonthlyCases userInfo={this.props.userInfo} />\n        </Col>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <AnnualCases userInfo={this.props.userInfo} />\n        </Col>\n      </Row>\n    );\n  };\n\n  renderManagerCards = () => {\n    return (\n      <Row>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <AllCases />\n        </Col>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <ReferallCases />\n        </Col>\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <NotReferallCases />\n        </Col>\n\n        <Col lg=\"3\" md=\"3\" className=\"text-center align-middle\">\n          <FeedbackCases />\n        </Col>\n\n        {/* TODO: Show diference between closed and opened cases */}\n      </Row>\n    );\n  };\n\n  renderFocalPointCards = () => {\n    return (\n      <Row>\n        <Col md=\"4\">\n          <TotalFocalPointManager userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"4\">\n          <FeedbackFocalPointManager userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"4\">\n          <NoFeedbackFocalPointManager userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"4\">\n          <TotalFocalPointPartner userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"4\">\n          <FeedbackFocalPointPartner userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"4\">\n          <NoFeedbackFocalPointPartner userInfo={this.props.userInfo} />\n        </Col>\n      </Row>\n    );\n  };\n\n  renderPartnerCards = () => {\n    return (\n      <Row>\n        <Col md=\"3\">\n          <TotalPartner userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"3\">\n          <NoFeedbackPartner userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"3\">\n          <ApprovedPartner userInfo={this.props.userInfo} />\n        </Col>\n        <Col md=\"3\">\n          <NotApprovedPartner userInfo={this.props.userInfo} />\n        </Col>\n\n      </Row>\n    );\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state,\n    config: state.auth.login.config,\n    userRole: state.auth.login.userRole,\n    app_reducer: state.app.app_reducer,\n    userInfo: state.auth.login.userOauth.profile.sub,\n  };\n}\n\nexport default connect(mapStateToProps, {})(Home);\n"],"sourceRoot":""}