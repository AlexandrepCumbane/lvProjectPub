{"version":3,"sources":["views/pages/Welcome.js"],"names":["Welcome","state","activeTab","email","password","username","csrf","times","initialText","authService","AuthService","toggle","tab","setState","updateToken","renewToken","then","getUser","res","context","initSocket","access_token","props","requestUpdateUser","renderText","className","color","test_connection","token","axios","get","headers","Authorization","data","changeRole","history","push","catch","response","validate_error","detail","interval","setInterval","clearInterval","text","logout","login","this","userOauth","err","sm","xl","lg","md","React","Component","contextType","IntlContext","connect","auth_state","auth","requestLogin","requestGetUser","requestDropodowns"],"mappings":"sTAoBMA,G,mNAIJC,MAAQ,CACNC,UAAW,IACXC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,MAAO,EACPC,YAAa,I,EASfC,YAAc,IAAIC,I,EAElBC,OAAS,SAACC,GACJ,EAAKX,MAAMC,YAAcU,GAC3B,EAAKC,SAAS,CACZX,UAAWU,K,EAkBjBE,YAAc,WACZ,EAAKL,YAAYM,aAAaC,MAAK,WACjC,EAAKP,YACFQ,UACAD,MAAK,SAACE,GACL,EAAKC,QAAQC,WAAWF,EAAIG,cAC5B,EAAKC,MAAMC,kBAAkBL,U,EAMrCM,WAAa,WACX,OAAI,EAAKvB,MAAMM,OAAS,GAEpB,kBAAC,IAAD,CAAUkB,UAAU,qDAClB,yBAAKA,UAAU,0BACb,0CACA,0HAUJ,kBAAC,IAAD,CAAUA,UAAU,qDAClB,yBAAKA,UAAU,0BACb,0CACA,wEACA,iDACqB,gCAAS,EAAKxB,MAAMM,SAG3C,kBAAC,IAAD,CAASmB,MAAM,c,EAWvBC,gBAAkB,SAACC,GACjBC,IACGC,IADH,wBACgC,CAC5BC,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAG5BZ,MAAK,YAAe,IAAZiB,EAAW,EAAXA,KACP,EAAKnB,cACL,EAAKQ,MAAMY,WAAWD,EAAI,aAAiB,IAC3CE,IAAQC,KAAK,YAEdC,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKC,eAAeD,EAASL,KAAKO,QAClC,IAAIC,EAAWC,aAAY,WACrB,EAAKzC,MAAMM,MAAQ,IACrB,EAAKM,SAAS,CAAEN,MAAO,EAAKN,MAAMM,MAAQ,IAC1CsB,IACGC,IADH,wBACgC,CAC5BC,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAG5BZ,MAAK,YAAe,IAAZiB,EAAW,EAAXA,KACPU,cAAcF,GACd,EAAK3B,cACL,EAAKQ,MAAMY,WAAWD,EAAI,aAAiB,IAC3CE,IAAQC,KAAK,YAEdC,OAAM,YAAmB,IAAhBC,EAAe,EAAfA,SACR,EAAKC,eAAeD,EAASL,KAAKO,YAGtCG,cAAcF,KAEf,S,EAITF,eAAiB,SAACK,GACH,uDAATA,GAIS,gEAATA,GAEA,EAAKnC,YAAYoC,SAAS7B,MAAK,kBAAM,EAAKP,YAAYqC,Y,uDA1G5D,WAAqB,IAAD,OAClBC,KAAKtC,YACFQ,UACAD,MAAK,SAACE,GACL,EAAKI,MAAMC,kBAAkBL,GAAKF,MAAK,WACrC,EAAKW,gBAAgB,EAAKL,MAAM0B,UAAU3B,oBAG7CgB,OAAM,SAACY,GACN,EAAKH,a,oBAsGX,WACE,OACE,kBAAC,IAAD,CAAKrB,UAAU,8BACb,kBAAC,IAAD,CACEyB,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,GAAG,IACH5B,UAAU,iCAEV,kBAAC,IAAD,CAAMA,UAAU,wBACd,kBAAC,IAAD,CAAKA,UAAU,OACb,kBAAC,IAAD,CAAK4B,GAAG,KAAK5B,UAAU,OACrB,kBAAC,IAAD,CAAMA,UAAU,uBAAuBsB,KAAKvB,uB,GA1JtC8B,IAAMC,YAAtBvD,EAEGwD,YAAcC,IA0KRC,uBARf,SAAyBzD,GACvB,MAAO,CACLA,MAAOA,EACP0D,WAAY1D,EAAM2D,KAAKd,MACvBE,UAAW/C,EAAM2D,KAAKd,MAAME,aAIQ,CACtCa,iBACAC,mBACA5B,eACA6B,sBACAxC,uBALamC,CAMZ1D","file":"static/js/12.2bb78cd9.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, CardBody, Row, Col, Spinner } from \"reactstrap\";\nimport {\n  requestLogin,\n  requestGetUser,\n  requestUpdateUser,\n  changeRole,\n} from \"../../redux/actions/auth/loginActions\";\n\nimport { requestDropodowns } from \"../../redux/actions/app/actions\";\n\nimport { axios } from \"../../redux/api\";\n\nimport { AuthService } from \"../../redux/oidc-config/services/authservice\";\nimport { IntlContext } from \"../../i18n/provider\";\nimport { history } from \"../../history\";\nimport \"../../assets/scss/pages/authentication.scss\";\n\n\nclass Welcome extends React.Component {\n\n  static contextType = IntlContext;\n\n  state = {\n    activeTab: \"1\",\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    csrf: \"\",\n    times: 0,\n    initialText: \"\",\n  };\n  // this.context.sendNotification(\n  //   \"Create\",\n  //   `new_${this.props.page}`,\n  //   this.state.form.get(\"referall_to_id\"),\n  //   `${item.lvform_label}`\n  // );\n\n  authService = new AuthService();\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.authService\n      .getUser()\n      .then((res) => {\n        this.props.requestUpdateUser(res).then(() => {\n          this.test_connection(this.props.userOauth.access_token);\n        });\n      })\n      .catch((err) => {\n        this.login();\n      });\n  }\n\n  updateToken = () => {\n    this.authService.renewToken().then(() => {\n      this.authService\n        .getUser()\n        .then((res) => {\n          this.context.initSocket(res.access_token);\n          this.props.requestUpdateUser(res) \n          }\n        );\n    });\n  };\n\n  renderText = () => {\n    if (this.state.times >= 10) {\n      return (\n        <CardBody className=\"d-flex justify-content-between align-items-center\">\n          <div className=\"justify-content-center\">\n            <h4>Linha 1458</h4>\n            <p>\n              You've reached the attempts limit, please reload the page or\n              contact your system manager.\n            </p>\n          </div>\n          {/* <Spinner color=\"primary\" /> */}\n        </CardBody>\n      );\n    } else {\n      return (\n        <CardBody className=\"d-flex justify-content-between align-items-center\">\n          <div className=\"justify-content-center\">\n            <h4>Linha 1458</h4>\n            <p>Welcome, your account is being validated.</p>\n            <p>\n              Validation attemps <strong>{this.state.times}</strong>\n            </p>\n          </div>\n          <Spinner color=\"primary\" />\n        </CardBody>\n      );\n    }\n  };\n  /**\n   *\n   * @param {*} token\n   *\n   * Verifies if user has role base access\n   */\n  test_connection = (token) => {\n    axios\n      .get(`users/0/get_user_info`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then(({ data }) => {\n        this.updateToken();\n        this.props.changeRole(data[\"groups_label\"][0]);\n        history.push(\"/home\");\n      })\n      .catch(({ response }) => {\n        this.validate_error(response.data.detail);\n        let interval = setInterval(() => {\n          if (this.state.times < 10) {\n            this.setState({ times: this.state.times + 1 });\n            axios\n              .get(`users/0/get_user_info`, {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              })\n              .then(({ data }) => {\n                clearInterval(interval);\n                this.updateToken();\n                this.props.changeRole(data[\"groups_label\"][0]);\n                history.push(\"/home\");\n              })\n              .catch(({ response }) => {\n                this.validate_error(response.data.detail);\n              });\n          } else {\n            clearInterval(interval);\n          }\n        }, 5000);\n      });\n  };\n\n  validate_error = (text) => {\n    if (text === \"You do not have permission to perform this action.\") {\n      return;\n    } else {\n      if (\n        text === \"Invalid Authorization header. Unable to verify bearer token\"\n      ) {\n        this.authService.logout().then(() => this.authService.login());\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Row className=\"m-0 justify-content-center\">\n        <Col\n          sm=\"8\"\n          xl=\"7\"\n          lg=\"10\"\n          md=\"8\"\n          className=\"d-flex justify-content-center\"\n        >\n          <Card className=\"rounded-0 mb-0 w-100\">\n            <Row className=\"m-0\">\n              <Col md=\"12\" className=\"p-0\">\n                <Card className=\"rounded-0 mb-0 px-2\">{this.renderText()}</Card>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state,\n    auth_state: state.auth.login,\n    userOauth: state.auth.login.userOauth,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  requestLogin,\n  requestGetUser,\n  changeRole,\n  requestDropodowns,\n  requestUpdateUser,\n})(Welcome);\n"],"sourceRoot":""}