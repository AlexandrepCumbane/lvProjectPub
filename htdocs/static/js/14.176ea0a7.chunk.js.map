{"version":3,"sources":["views/reports/charts/Column.js","views/reports/queries/CaseType.js","views/reports/queries/CasesProvince.js","views/reports/queries/CasesPerSector.js","views/reports/charts/Dounts.js","views/reports/queries/CaseAge.js","views/reports/charts/Pie.js","views/reports/queries/CaseKnowledgeLV.js","views/reports/queries/CaseCallFeedback.js","views/reports/queries/CaseGender.js","views/reports/Reports.js"],"names":["ColumnCharts","props","state","series","options","this","setState","name","data","chart","height","type","plotOptions","bar","dataLabels","position","columnWidth","barHeight","enabled","offsetY","style","fontSize","colors","xaxis","categories","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","color","stops","opacityFrom","opacityTo","tooltip","yaxis","labels","title","text","floating","align","Card","className","CardBody","React","Component","CASES_BY_CATEGORY","gql","CasesByCategory","useQuery","pollInterval","loading","error","category","datas","allCaseTypologies","forEach","element","push","translate","lvformSet","length","Column","CASES_BY_PROVINCE","CasesByProvince","allCasesProvinces","CASES_BY_SECTOR","CasesBySector","allCasesSector","sector","dcount","DonutCharts","isLoaded","width","responsive","breakpoint","legend","CASES_BY_AGE","CasesByAge","allCasesAge","ageGroup","Number","PieCharts","CASES_BY_KNOWLEDGE","CasesByKnowLedge","allCasesKnowledgeAbout","howKnowsLv","Pie","CASES_BY_CALL_FEEDBACK","CasesByCallFeedback","allCasesCallFeedback","callFeedback","choices","male","female","other","CasesByGender","allCasesGender","gender","Information","context","pageTitle","pageParent","activePage","items","columnDefs","page","locale","LOCALES","PORTUGUESE","breadCrumbItems","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","md","contextType","IntlContext","connect","config","auth","login","app_reducer","app"],"mappings":"kTAwHeA,E,kDAnHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,OAAQ,GACRC,QAAS,IALM,E,qDASnB,WACEC,KAAKC,SAAS,CACZH,OAAQ,CACN,CACEI,KAAM,QACNC,KAAMH,KAAKJ,MAAMG,QAAQI,OAG7BJ,QAAS,CACPK,MAAO,CACLC,OAAQ,IACRC,KAAM,OAERC,YAAa,CACXC,IAAK,CACHC,WAAY,CACVC,SAAU,MACVC,YAAa,MACbC,UAAW,SAIjBH,WAAY,CACVI,SAAS,EACTC,SAAU,GACVC,MAAO,CACLC,SAAU,OACVC,OAAQ,CAAC,WAIbC,MAAO,CASLC,WAAYnB,KAAKJ,MAAMG,QAAQoB,WAC/BT,SAAU,SACVU,WAAY,CACVC,MAAM,GAERC,UAAW,CACTD,MAAM,GAERE,WAAY,CACVC,KAAM,CACJlB,KAAM,WACNmB,SAAU,CACRC,UAAW,QACXC,QAAS3B,KAAKJ,MAAMG,QAAQ6B,MAC5BC,MAAO,CAAC,EAAG,KACXC,YAAa,EACbC,UAAW,MAIjBC,QAAS,CACPnB,SAAS,IAGboB,MAAO,CACLb,WAAY,CACVC,MAAM,GAERC,UAAW,CACTD,MAAM,GAERa,OAAQ,CACNb,MAAM,IAMVc,MAAO,CACLC,KAAMpC,KAAKJ,MAAMuC,MACjBE,UAAU,EACVvB,QAAS,IACTwB,MAAO,SACPvB,MAAO,CACLa,MAAO,e,oBAOjB,WACE,OACE,kBAACW,EAAA,EAAD,CAAMC,UAAU,mBACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1C,QAASC,KAAKH,MAAME,QACpBD,OAAQE,KAAKH,MAAMC,OACnBQ,KAAK,MACLD,OAAQ,Y,GA7GOqC,IAAMC,WCA3BC,EAAoBC,cAAH,wIAYhB,SAASC,EAAgBlD,GAC9B,MAAiCmD,mBAASH,EAAmB,CAC3DI,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GAOZ,OALAjD,EAAKkD,kBAAkBC,SAAQ,SAACC,GAC9BJ,EAASK,KAAK5D,EAAM6D,UAAUF,EAAQJ,WACtCC,EAAMI,KAAKD,EAAQG,UAAUC,WAI7B,kBAACC,EAAD,CACE7D,QAAS,CACP6B,MAAO,UACPO,MAAO,YACPhB,WAAYgC,EACZhD,KAAMiD,KClCd,I,EAAMS,EAAoBhB,cAAH,oIAYhB,SAASiB,EAAgBlE,GAC9B,MAAiCmD,mBAASc,EAAmB,CAC3Db,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GAOZ,OALAjD,EAAK4D,kBAAkBT,SAAQ,SAACC,GAC9BJ,EAASK,KAAK5D,EAAM6D,UAAUF,EAAQrD,OACtCkD,EAAMI,KAAKD,EAAQG,UAAUC,WAI7B,kBAACC,EAAD,CACE7D,QAAS,CACP6B,MAAO,UACPO,MAAO,YACPhB,WAAYgC,EACZhD,KAAMiD,KClCd,IAAMY,EAAkBnB,cAAH,+FASd,SAASoB,EAAcrE,GAC5B,MAAiCmD,mBAASiB,EAAiB,CACzDhB,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GAOZ,OALAjD,EAAK+D,eAAeZ,SAAQ,SAACC,GAC3BJ,EAASK,KAAK5D,EAAM6D,UAAUF,EAAQY,SACtCf,EAAMI,KAAKD,EAAQa,WAInB,kBAACR,EAAD,CACE7D,QAAS,CACP6B,MAAO,UACPO,MAAO,YACPhB,WAAYgC,EACZhD,KAAMiD,K,MC0BCiB,E,4MAxDbxE,MAAQ,CACNC,OAAQ,GACRC,QAAS,GACTuE,UAAU,G,uDAEZ,WAEEtE,KAAKC,SAAS,CACZH,OAAQE,KAAKJ,MAAME,OACnBC,QAAS,CACPK,MAAO,CACLmE,MAAO,IACPjE,KAAM,OAER4B,OAAQlC,KAAKJ,MAAMsC,OACnBsC,WAAY,CACV,CACEC,WAAY,IACZ1E,QAAS,CACPK,MAAO,CACLmE,MAAO,KAETG,OAAQ,CACNhE,SAAU,aAKlByB,MAAO,CACLC,KAAMpC,KAAKJ,MAAMuC,MACjBE,UAAU,EACVvB,QAAS,IACTwB,MAAO,SACPvB,MAAO,CACLa,MAAO,e,oBAOjB,WAAU,IAAD,EACP,OACE,kBAACW,EAAA,EAAD,CAAMC,UAAU,mBACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1C,QAASC,KAAKH,MAAME,QACpBD,OAAM,UAAEE,KAAKH,MAAMC,cAAb,QAAuB,GAC7BQ,KAAK,QACLD,OAAQ,Y,GAlDMqC,IAAMC,WCA1BgC,EAAe9B,cAAH,8FASX,SAAS+B,EAAWhF,GACzB,MAAiCmD,mBAAS4B,EAAc,CACtD3B,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GAOZ,OALAjD,EAAK0E,YAAYvB,SAAQ,SAACC,GACxBJ,EAASK,KAAK5D,EAAM6D,UAAUF,EAAQuB,WACtC1B,EAAMI,KAAKuB,OAAOxB,EAAQa,YAGrB,kBAAC,EAAD,CAAYtE,OAAQsD,EAAOlB,OAAQiB,I,QCiB7B6B,E,kDAzCb,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,OAAQ,EAAKF,MAAME,OACnBC,QAAS,CACPK,MAAO,CACLmE,MAAO,IACPjE,KAAM,OAER4B,OAAQ,EAAKtC,MAAMsC,OACnBsC,WAAY,CACV,CACEC,WAAY,IACZ1E,QAAS,CACPK,MAAO,GACPsE,OAAQ,CACNhE,SAAU,eAjBL,E,0CA0BnB,WACE,OACE,kBAAC6B,EAAA,EAAD,CAAMC,UAAU,mBACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1C,QAASC,KAAKH,MAAME,QACpBD,OAAQE,KAAKH,MAAMC,OACnBQ,KAAK,MACLD,OAAQ,Y,GAnCIqC,IAAMC,WCAxBsC,EAAqBpC,cAAH,2GASjB,SAASqC,EAAiBtF,GAC/B,MAAiCmD,mBAASkC,EAAoB,CAC5DjC,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GASZ,OAPAjD,EAAKgF,uBAAuB7B,SAAQ,SAACC,GAC/BA,EAAQ6B,YAAc7B,EAAQa,SAChCjB,EAASK,KAAK5D,EAAM6D,UAAUF,EAAQ6B,aACtChC,EAAMI,KAAKuB,OAAOxB,EAAQa,aAIvB,kBAACiB,EAAD,CAAUvF,OAAQsD,EAAOlB,OAAQiB,IC3B1C,I,EAAMmC,EAAyBzC,cAAH,2GASrB,SAAS0C,EAAoB3F,GAClC,MAAiCmD,mBAASuC,EAAwB,CAChEtC,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GASZ,OAPAjD,EAAKqF,qBAAqBlC,SAAQ,SAACC,GAC7BA,EAAQkC,eACVtC,EAASK,KAAK5D,EAAM6D,UAAUF,EAAQkC,eACtCrC,EAAMI,KAAKuB,OAAOxB,EAAQa,aAIvB,kBAACiB,EAAD,CAAUvF,OAAQsD,EAAOlB,OAAQiB,IC3B1C,IAAMuC,EAAU,CACdC,KAAM,OACNC,OAAQ,SACRC,MAAO,iBAEHlB,EAAe9B,cAAH,+FASX,SAASiD,EAAclG,GAC5B,MAAiCmD,mBAAS4B,EAAc,CACtD3B,aAAc,MADRC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAO/C,EAAxB,EAAwBA,KAIxB,GAAI8C,EAAS,OAAO,yCACpB,GAAIC,EAAO,OAAO,qCAElB,IAAIC,EAAW,GACXC,EAAQ,GAOZ,OALAjD,EAAK4F,eAAezC,SAAQ,SAACC,GAC3BJ,EAASK,KAAK5D,EAAM6D,UAAUiC,EAAQnC,EAAQyC,UAC9C5C,EAAMI,KAAKuB,OAAOxB,EAAQa,YAGrB,kBAAC,EAAD,CAAYtE,OAAQsD,EAAOlB,OAAQiB,I,ICtBtC8C,E,4MAEJxC,UAAY,EAAKyC,QAAQzC,U,EAEzB5D,MAAQ,CACNsG,UAAW,EAAK1C,UAAU,WAC1B2C,WAAY,EAAK3C,UAAU,0BAC3B4C,WAAY,EAAK5C,UAAU,WAC3B6C,MAAO,GACPC,WAAY,GACZlF,MAAM,EACNlB,KAAM,GACNqG,KAAM,SACNC,OAAQC,IAAQC,Y,4CAGlB,WACE,OACE,6BACE,kBAAC,IAAD,CACEC,gBAAiB,GACjBC,gBAAiB7G,KAAKH,MAAMsG,UAC5BW,iBAAkB9G,KAAKH,MAAMuG,WAC7BW,iBAAkB/G,KAAKH,MAAMwG,aAG/B,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,4BAAKlH,KAAKyD,UAAU,0BACpB,kBAACmB,EAAD,CAAYnB,UAAWzD,KAAKyD,aAE9B,kBAACwD,EAAA,EAAD,CAAKC,GAAG,KACN,gCAAMlH,KAAKyD,UAAU,6BAErB,kBAACqC,EAAD,CAAerC,UAAWzD,KAAKyD,aAEjC,kBAACwD,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAI1E,UAAU,IAAd,IAAmBxC,KAAKyD,UAAU,sBAClC,kBAACyB,EAAD,CAAkBzB,UAAWzD,KAAKyD,aAGpC,kBAACwD,EAAA,EAAD,CAAKC,GAAG,KACN,4BAAKlH,KAAKyD,UAAU,gBACpB,kBAAC8B,EAAD,CAAqB9B,UAAWzD,KAAKyD,cAIzC,kBAACuD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,4BAAKlH,KAAKyD,UAAU,uBACpB,kBAACK,EAAD,CAAiBL,UAAWzD,KAAKyD,aAGnC,kBAACwD,EAAA,EAAD,CAAKC,GAAG,MACN,gCAAMlH,KAAKyD,UAAU,cACrB,kBAACX,EAAD,CAAiBW,UAAWzD,KAAKyD,cAIrC,kBAACuD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,4BAAKlH,KAAKyD,UAAU,qBACpB,kBAACQ,EAAD,CAAeR,UAAWzD,KAAKyD,mB,GA9DjBd,aAApBsD,EACGkB,YAAcC,IA6ERC,uBARf,SAAyBxH,GACvB,MAAO,CACLA,MAAOA,EACPyH,OAAQzH,EAAM0H,KAAKC,MAAMF,OACzBG,YAAa5H,EAAM6H,IAAID,eAIa,GAAzBJ,CAA6BpB","file":"static/js/14.176ea0a7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\n\nclass ColumnCharts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [],\n      options: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      series: [\n        {\n          name: \"Value\",\n          data: this.props.options.data, //[1, 2, 1, 5, 4, 86]\n        },\n      ],\n      options: {\n        chart: {\n          height: 350,\n          type: \"bar\",\n        },\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              position: \"top\", // top, center, bottom\n              columnWidth: \"50%\",\n              barHeight: \"70%\",\n            },\n          },\n        },\n        dataLabels: {\n          enabled: true,\n          offsetY: -20,\n          style: {\n            fontSize: \"12px\",\n            colors: [\"brown\"],\n          },\n        },\n\n        xaxis: {\n          //   categories: [\n          //     \"Gaza\",\n          //     \"Cabo Delgado\",\n          //     \"Tete\",\n          //     \"Manica\",\n          //     \"Zambezia\",\n          //     \"Sofala\",\n          //   ],\n          categories: this.props.options.categories,\n          position: \"bottom\",\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n          crosshairs: {\n            fill: {\n              type: \"gradient\",\n              gradient: {\n                colorFrom: \"brown\",\n                colorTo: this.props.options.color, //colorTo: \"#BED1E6\",\n                stops: [0, 100],\n                opacityFrom: 0,\n                opacityTo: 0.5,\n              },\n            },\n          },\n          tooltip: {\n            enabled: true,\n          },\n        },\n        yaxis: {\n          axisBorder: {\n            show: false,\n          },\n          axisTicks: {\n            show: false,\n          },\n          labels: {\n            show: false,\n            // formatter: function (val) {\n            //   return val + \"%\";\n            // },\n          },\n        },\n        title: {\n          text: this.props.title,\n          floating: true,\n          offsetY: 330,\n          align: \"center\",\n          style: {\n            color: \"brown\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Card className=\"square rounde-0\">\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"bar\"\n            height={350}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default ColumnCharts;\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport ColumnChart from \"../charts/Column\";\n\nconst CASES_BY_CATEGORY = gql`\n  {\n    allCaseTypologies {\n      id\n      category\n      lvformSet {\n        id\n      }\n    }\n  }\n`;\n\nexport function CasesByCategory(props) {\n  const { loading, error, data } = useQuery(CASES_BY_CATEGORY, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCaseTypologies.forEach((element) => {\n    category.push(props.translate(element.category));\n    datas.push(element.lvformSet.length);\n  });\n\n  return (\n    <ColumnChart\n      options={{\n        color: \"#d9eb55\",\n        title: \"CASE TYPE\",\n        categories: category,\n        data: datas,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport ColumnChart from \"../charts/Column\";\n\nconst CASES_BY_PROVINCE = gql`\n  {\n    allCasesProvinces {\n      id\n      name\n      lvformSet {\n        id\n      }\n    }\n  }\n`;\n\nexport function CasesByProvince(props) {\n  const { loading, error, data } = useQuery(CASES_BY_PROVINCE, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCasesProvinces.forEach((element) => {\n    category.push(props.translate(element.name));\n    datas.push(element.lvformSet.length);\n  });\n\n  return (\n    <ColumnChart\n      options={{\n        color: \"#d9eb55\",\n        title: \"CASE TYPE\",\n        categories: category,\n        data: datas,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport ColumnChart from \"../charts/Column\";\n\nconst CASES_BY_SECTOR = gql`\n  {\n    allCasesSector {\n      sector\n      dcount\n    }\n  }\n`;\n\nexport function CasesBySector(props) {\n  const { loading, error, data } = useQuery(CASES_BY_SECTOR, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCasesSector.forEach((element) => {\n    category.push(props.translate(element.sector));\n    datas.push(element.dcount);\n  });\n\n  return (\n    <ColumnChart\n      options={{\n        color: \"#d9eb55\",\n        title: \"CASE TYPE\",\n        categories: category,\n        data: datas,\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\n\nclass DonutCharts extends React.Component {\n  state = {\n    series: [],\n    options: {},\n    isLoaded: false,\n  };\n  componentDidMount() {\n    // console.log(this.props);\n    this.setState({\n      series: this.props.series, //[44, 55, 13, 43, 22],\n      options: {\n        chart: {\n          width: 380,\n          type: \"pie\",\n        },\n        labels: this.props.labels, //[\"Team A\", \"Team B\", \"Team C\", \"Team D\", \"Team E\"],\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              chart: {\n                width: 200,\n              },\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n        ],\n        title: {\n          text: this.props.title,\n          floating: true,\n          offsetY: 330,\n          align: \"center\",\n          style: {\n            color: \"brown\",\n          },\n        },\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Card className=\"square rounde-0\">\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series ?? []}\n            type=\"donut\"\n            height={350}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default DonutCharts;\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport DountChart from \"../charts/Dounts\";\n\nconst CASES_BY_AGE = gql`\n  {\n    allCasesAge {\n      ageGroup\n      dcount\n    }\n  }\n`;\n\nexport function CasesByAge(props) {\n  const { loading, error, data } = useQuery(CASES_BY_AGE, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCasesAge.forEach((element) => {\n    category.push(props.translate(element.ageGroup));\n    datas.push(Number(element.dcount));\n  });\n\n  return <DountChart series={datas} labels={category} />;\n}\n","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport Chart from \"react-apexcharts\";\n\nclass PieCharts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: this.props.series,\n      options: {\n        chart: {\n          width: 380,\n          type: \"pie\",\n        },\n        labels: this.props.labels,\n        responsive: [\n          {\n            breakpoint: 480,\n            options: {\n              chart: {},\n              legend: {\n                position: \"bottom\",\n              },\n            },\n          },\n        ],\n      },\n    };\n  }\n\n  render() {\n    return (\n      <Card className=\"square rounde-0\">\n        <CardBody>\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"pie\"\n            height={350}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\nexport default PieCharts;\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport PieChart from \"../charts/Pie\";\n\nconst CASES_BY_KNOWLEDGE = gql`\n  {\n    allCasesKnowledgeAbout {\n      howKnowsLv\n      dcount\n    }\n  }\n`;\n\nexport function CasesByKnowLedge(props) {\n  const { loading, error, data } = useQuery(CASES_BY_KNOWLEDGE, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCasesKnowledgeAbout.forEach((element) => {\n    if (element.howKnowsLv && element.dcount) {\n      category.push(props.translate(element.howKnowsLv));\n      datas.push(Number(element.dcount));\n    }\n  });\n\n  return <PieChart series={datas} labels={category} />;\n}\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport PieChart from \"../charts/Pie\";\n\nconst CASES_BY_CALL_FEEDBACK = gql`\n  {\n    allCasesCallFeedback {\n      callFeedback\n      dcount\n    }\n  }\n`;\n\nexport function CasesByCallFeedback(props) {\n  const { loading, error, data } = useQuery(CASES_BY_CALL_FEEDBACK, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCasesCallFeedback.forEach((element) => {\n    if (element.callFeedback) {\n      category.push(props.translate(element.callFeedback));\n      datas.push(Number(element.dcount));\n    }\n  });\n\n  return <PieChart series={datas} labels={category} />;\n}\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport DountChart from \"../charts/Dounts\";\n\nconst choices = {\n  male: \"Male\",\n  female: \"Female\",\n  other: \"Not specified\",\n};\nconst CASES_BY_AGE = gql`\n  {\n    allCasesGender {\n      gender\n      dcount\n    }\n  }\n`;\n\nexport function CasesByGender(props) {\n  const { loading, error, data } = useQuery(CASES_BY_AGE, {\n    pollInterval: 50000,\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error </p>;\n\n  let category = [];\n  let datas = [];\n\n  data.allCasesGender.forEach((element) => {\n    category.push(props.translate(choices[element.gender]));\n    datas.push(Number(element.dcount));\n  });\n\n  return <DountChart series={datas} labels={category} />;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IntlContext, LOCALES } from \"../../i18n/index\";\nimport { Col, Row } from \"reactstrap\";\nimport Breadcrumbs from \"../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { CasesByCategory } from \"./queries/CaseType\";\nimport { CasesByProvince } from \"./queries/CasesProvince\";\nimport { CasesBySector } from \"./queries/CasesPerSector\";\nimport { CasesByAge } from \"./queries/CaseAge\";\nimport { CasesByKnowLedge } from \"./queries/CaseKnowledgeLV\";\nimport { CasesByCallFeedback } from \"./queries/CaseCallFeedback\";\nimport { CasesByGender } from \"./queries/CaseGender\";\nclass Information extends Component {\n  static contextType = IntlContext;\n  translate = this.context.translate;\n\n  state = {\n    pageTitle: this.translate(\"Reports\"),\n    pageParent: this.translate(\"Analysis and Reporting\"),\n    activePage: this.translate(\"Reports\"),\n    items: [],\n    columnDefs: [],\n    show: false,\n    data: [],\n    page: \"lvform\",\n    locale: LOCALES.PORTUGUESE,\n  };\n\n  render() {\n    return (\n      <div>\n        <Breadcrumbs\n          breadCrumbItems={[]}\n          breadCrumbTitle={this.state.pageTitle}\n          breadCrumbParent={this.state.pageParent}\n          breadCrumbActive={this.state.activePage}\n        />\n    \n        <Row>\n          <Col md=\"6\">\n            <h5>{this.translate(\"CALLER PROFILE BY AGE\")}</h5>\n            <CasesByAge translate={this.translate}/>\n          </Col>\n          <Col md=\"6\">\n            <h5> {this.translate(\"CALLER PROFILE BY GENDER\")}</h5>\n\n            <CasesByGender translate={this.translate} />\n          </Col>\n          <Col md=\"6\">\n            <h5 className=\"\"> {this.translate(\"KOWLEDGE ABOUT LV\")}</h5>\n            <CasesByKnowLedge translate={this.translate} />\n          </Col>\n\n          <Col md=\"6\">\n            <h5>{this.translate(\"SATISFATION\")}</h5>\n            <CasesByCallFeedback translate={this.translate} />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md=\"12\">\n            <h5>{this.translate(\"CASES BY PROVINCES\")}</h5>\n            <CasesByProvince translate={this.translate} />\n          </Col>\n\n          <Col md=\"12\">\n            <h5> {this.translate(\"CASE TYPE\")}</h5>\n            <CasesByCategory translate={this.translate} />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md=\"12\">\n            <h5>{this.translate(\"CASES PER SECTOR\")}</h5>\n            <CasesBySector translate={this.translate} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    state: state,\n    config: state.auth.login.config,\n    app_reducer: state.app.app_reducer,\n  };\n}\n\nexport default connect(mapStateToProps, {})(Information);\n"],"sourceRoot":""}