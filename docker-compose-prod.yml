version: '3.4'

x-service-volumes: &service-volumes
  - .:/code

x-service-volumes-node: &service-volumes-node
  - .:/code
  - /app/node_modules
  - ./app:/app

x-database-variables: &database-variables
  DB_HOST: db
  DB_NAME: postgres
  DB_USER: postgres
  DB_PASS: postgres

x-app-variables: &app-variables
  <<: *database-variables
  POSTGRES_HOST: postgres

services:
  db_migrate:
    build: .
    # image: roboboinc/linhaverde
    command: python db/manage.py migrate
    volumes: *service-volumes
    env_file:
      - .env
  frontend:
    build: ./app
    # image: roboboinc/linhaverde
    container_name: case_management_app_frontend
    command: npm start
    hostname: ${HOSTNAME}
    volumes: *service-volumes-node

    ports:
      - "3000:3000"
    stdin_open: true
    env_file:
      - .env
    depends_on:
      - db_migrate
      - redis
      - web
  web:
    build: .
    # image: roboboinc/linhaverde
    container_name: case_management_app
    # platform: linux/x86_64    # Building on M1 Chip
    command: python db/manage.py runserver 0.0.0.0:8000 
        # 
        # && cd app/ && npm i -f && cd ..
        # && bash deploy.sh 0.0.3
      
    hostname: ${HOSTNAME}
    volumes: *service-volumes
    ports:
      - "8000:8000"
    # environment: *app-variables-local
    env_file:
      - .env
    depends_on:
      - db_migrate
      - redis
    networks:
      - web_network
  redis:
    image: redis:alpine

  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/dhparam:/etc/nginx/dhparam
      - ./certbot/conf/:/etc/nginx/ssl/
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
    networks:
      - web_network
    depends_on: 
      - web

  certbot:
    image: certbot/certbot:latest
    command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email it@robobo.org --agree-tos --no-eff-email -d backend.linha1458.moz.wfp.org
    volumes:
       - ./certbot/conf/:/etc/letsencrypt
       - ./certbot/logs/:/var/log/letsencrypt
       - ./certbot/data:/usr/share/nginx/html/letsencrypt
  # celery:
  #   restart: always
  #   build:
  #     context: .
  #   command: ['celery', '-A', 'web', 'worker', '-l', 'INFO']
  #   volumes: *service-volumes
  #   environment: *app-variables-env
  #   depends_on:
  #     - db
  #     - redis
  #     - web

# volumes:
#   - db-data:/var/lib/postgresql/data

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge